{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Fox",
	"scopeName": "source.fox",
	"fileTypes": [
		"fox"
	],
	"patterns": [],
	"repository": {
		"boolean-literal-true": {
			"patterns": [
				{
					"name": "constant.language.boolean.true.fox",
					"match": "(?<!\\.)\\btrue\\b"
				}
			]
		},
		"boolean-literal-false": {
			"patterns": [
				{
					"name": "constant.language.boolean.false.fox",
					"match": "(?<!\\.)\\bfalse\\b"
				}
			]
		},
		"null-literal": {
			"name": "constant.language.null.fox",
			"match": "(?<!\\.)\\bnull\\b"
		},
		"numeric-literal-hex": {
			"patterns": [
				{
					"name": "constant.numeric.hex.fox",
					"match": "\\b0(x)[0-9a-f_]+(u|l|ul)?\\b"
				}
			]
		},
		"numeric-literal-decimal": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.fox",
					"match": "\\b([0-9_]+)?\\.[0-9_]+((e)[0-9]+)?(f)?\\b"
				},
				{
					"name": "constant.numeric.decimal.fox",
					"match": "\\b[0-9_]+(e)[0-9_]+(f)?\\b"
				},
				{
					"name": "constant.numeric.decimal.fox",
					"match": "\\b[0-9_]+(f)\\b"
				},
				{
					"name": "constant.numeric.decimal.fox",
					"match": "\\b[0-9_]+(u|l|ul)?\\b"
				}
			]
		},
		"string-character-escape": {
			"name": "constant.character.escape.fox",
			"match": "\\\\."
		},
		"string-literal": {
			"name": "string.quoted.double.fox",
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.fox"
				}
			},
			"end": "(\")|((?:[^\\\\\\n])$)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.fox"
				},
				"2": {
					"name": "invalid.illegal.newline.fox"
				}
			},
			"patterns": [
				{
					"include": "#string-character-escape"
				}
			]
		},
		"char-literal": {
			"name": "string.quoted.single.fox",
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.char.begin.fox"
				}
			},
			"end": "(\\')|((?:[^\\\\\\n])$)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.char.end.fox"
				},
				"2": {
					"name": "invalid.illegal.newline.fox"
				}
			},
			"patterns": [
				{
					"include": "#string-character-escape"
				}
			]
		},
		"boolean-literal": {
			"patterns": [
				{
					"include": "#boolean-literal-true"
				},
				{
					"include": "#boolean-literal-false"
				}
			]
		},
		"numeric-literal": {
			"patterns": [
				{
					"include": "#numeric-literal-hex"
				},
				{
					"include": "#numeric-literal-decimal"
				}
			]
		},
		"literal": {
			"patterns": [
				{
					"include": "#boolean-literal"
				},
				{
					"include": "#null-literal"
				},
				{
					"include": "#numeric-literal"
				},
				{
					"include": "#string-literal"
				},
				{
					"include": "#char-literal"
				}
			]
		}
	}
}